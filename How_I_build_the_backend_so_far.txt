This is the document which explains how to build a simple javaspringboot backend from the scratch.

Step 1:
go to https://spring.io/guides/gs/accessing-data-mysql/
here there will be given instructions how to create a java springboot server.
More detailed instructions from this webpage: go to start.spring.io, add dependencies such as
Spring web, Spring data JPA and MYSQL driver.
important note: JAVA 17, MAVEN SHALL BE CHOSEN IN THE BEGINNING.
CLICK GENERATE!

Step 2:

Create a database.
You only need to create the database schema with a name. Tables will automatically created
from the javaspring boot server which will be explained in more detailed way later on.(Next steps).

Step 3:

Application.Properties (under resources folder) is the file where the database is connected.
In my case, for my specific db instance and db name here is the actual file for it:

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/person_example
spring.datasource.username=localhost
spring.datasource.password=Lavdimimeri27
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true

Step 4:
Add the enitity model which in my case is the Person.java class. 
The system automatically creates a table from this class.
For more details check Person.java class in my github project called demo1 which
resides on secondprojectfullstackjavaspringboot.

Step 5:
The repository is the place where everything is connected. It contains only 2 lines of code.
It is amazing interface actually which makes your life easier.
This is the implementation in my case:
public interface PersonDataAccessService extends CrudRepository<Person, Integer> {
}

Can be used for every entity. In my case you can see that it is a Person.


Step 6:

Add the controller: In my case is PersonController. Here we have the RESTController in my case.
I do CRUD on users.



Step 7: Here is the link to a very very good webpage which can help you to added service class
and many more things
-https://www.tutorialspoint.com/spring_boot_jpa/spring_boot_jpa_quick_guide.htm#


Step 8: This is for myself. The template resides on C:\Users\lavdi\BackEndTemplateForJavaSpringBoot(MUSTNOTBECHANGEDORADJUSTED)
as demo 1

